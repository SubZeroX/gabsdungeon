{"version":3,"file":"component---src-templates-note-map-jsx-cd8172a5220b91933e19.js","mappings":"4MAKMA,EAAWC,EAAQ,MAEV,SAASC,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,YAEvBC,EAAY,CAChBC,MAAOC,OAAOC,KAAKJ,EAAYK,aAAaC,KAAI,SAACC,EAAKC,GACpD,MAAO,CAAEC,GAAIF,MAEfG,MAAO,IAMT,IAAK,IAAIC,KAHTV,EAAUC,MAAMU,KAAK,CAAEH,GAAI,WAAYI,MAAO,OAAQC,UAAW,SAG3Cd,EAAYK,YAAa,CAAC,IAAD,IACvCU,EAAgBf,EAAYK,YAAYM,GAE9C,IAAK,IAAIK,KAAKD,EAAe,CAC3B,IAAME,EAAeF,EAAcC,QAGWE,IAA1ClB,EAAYK,YAAYY,IAC1BhB,EAAUS,MAAME,KAAK,CAAEO,OAAQR,EAAWS,OAAQH,IAMpD,UAACjB,EAAYK,YAAYM,UAAzB,OAAC,EAAoCU,QACrC,UAACrB,EAAYsB,cAAcX,UAA3B,OAAC,EAAsCU,QAEvCpB,EAAUS,MAAME,KAAK,CACnBO,OAAQR,EACRS,OAAQ,WACRP,MAAO,SA6Cb,OACE,gBAAC,IAAD,KACE,uBAAKU,UAAU,kBACb,6CAEA,wCACe,IACb,gBAAC,KAAD,CAAMC,GAAG,YACP,8BAASrB,OAAOC,KAAKJ,EAAYK,aAAagB,UAIlD,uBAAKZ,GAAG,mBACN,gBAAC,KAAD,CACEA,GAAG,sBACHgB,KAAMxB,EACNyB,OAlDU,CAElBC,UAAU,EAEVC,gBAAiB,EACjBC,uBAAuB,EACvBC,uBAAuB,EACvBC,aAAa,EACbC,OAAQ,IACRC,MAAO,KAEPC,KAAM,CACJrB,MAAO,OACPsB,KAAM,IACNC,SAAU,GACVC,kBAAmB,GACnBC,oBAAqB,OACrBC,qBAAsB,QACtBC,qBAAsB,IACtBC,cAAe,OAEjBC,KAAM,CACJC,eAAgB,SAGlBC,GAAI,CACFC,YAAa,IACbC,SAAU,IACVC,WAAY,IACZC,aAAc,EACdC,kBAAkB,IAqBZC,YAzDU,SAAUC,GAC5B,IAAMC,EAAOvD,EAASsD,IACtBE,EAAAA,EAAAA,IAAS,IAAID","sources":["webpack://gatsby-garden/./src/templates/note-map.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link, navigate } from 'gatsby'\r\nimport { Graph } from 'react-d3-graph'\r\nimport Layout from '../layout/layout'\r\nimport '../styles/graph.css'\r\nconst makeSlug = require('../utils/make-slug')\r\n\r\nexport default function Note({ pageContext }) {\r\n  // Create the data for the graph visualisation for the note linking.\r\n  const graphData = {\r\n    nodes: Object.keys(pageContext.allRefersTo).map((key, index) => {\r\n      return { id: key }\r\n    }),\r\n    links: [],\r\n  }\r\n\r\n  graphData.nodes.push({ id: 'No Links', color: '#eee', fontColor: '#999' }) // All unlinked notes will link to this. So that the graphing library will render it properly.\r\n\r\n  // Set up the linkages between the notes.\r\n  for (let noteTitle in pageContext.allRefersTo) {\r\n    const refNoteTitles = pageContext.allRefersTo[noteTitle]\r\n\r\n    for (let i in refNoteTitles) {\r\n      const refNoteTitle = refNoteTitles[i]\r\n\r\n      // Show links to only the notes that exists. There will be some linking to non existing notes - that will break the graph.\r\n      if (pageContext.allRefersTo[refNoteTitle] !== undefined) {\r\n        graphData.links.push({ source: noteTitle, target: refNoteTitle })\r\n      }\r\n    }\r\n\r\n    // If this is an orphan note(no links to and from other notes), we need some hackery to get it to work.\r\n    if (\r\n      !pageContext.allRefersTo[noteTitle]?.length &&\r\n      !pageContext.allReferredBy[noteTitle]?.length\r\n    ) {\r\n      graphData.links.push({\r\n        source: noteTitle,\r\n        target: 'No Links',\r\n        color: '#eee',\r\n      })\r\n    }\r\n  }\r\n\r\n  const onClickNode = function (nodeId) {\r\n    const slug = makeSlug(nodeId)\r\n    navigate(`/${slug}`)\r\n  }\r\n\r\n  // the graph configuration, just override the ones you need\r\n  const graphConfig = {\r\n    // automaticRearrangeAfterDropNode: true,\r\n    directed: false, // If true, highlighting on mouseover will also be directed\r\n    // initialZoom: 1.4,\r\n    highlightDegree: 2,\r\n    nodeHighlightBehavior: true,\r\n    linkHighlightBehavior: true,\r\n    collapsible: true,\r\n    height: 800,\r\n    width: 1100,\r\n\r\n    node: {\r\n      color: 'gray',\r\n      size: 120,\r\n      fontSize: 10,\r\n      highlightFontSize: 10,\r\n      highlightFontWeight: 'bold',\r\n      highlightStrokeColor: 'black',\r\n      highlightStrokeWidth: 1.5,\r\n      labelPosition: 'top',\r\n    },\r\n    link: {\r\n      highlightColor: 'black',\r\n    },\r\n\r\n    d3: {\r\n      alphaTarget: 0.05,\r\n      gravity: -250,\r\n      linkLength: 120,\r\n      linkStrength: 2,\r\n      disableLinkForce: false,\r\n    },\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"column is-half\">\r\n        <h1>Knowledge Graph</h1>\r\n\r\n        <p>\r\n          Total Notes:{' '}\r\n          <Link to=\"/sitemap\">\r\n            <strong>{Object.keys(pageContext.allRefersTo).length}</strong>\r\n          </Link>\r\n        </p>\r\n\r\n        <div id=\"graph-container\">\r\n          <Graph\r\n            id=\"all-note-link-graph\"\r\n            data={graphData}\r\n            config={graphConfig}\r\n            onClickNode={onClickNode}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["makeSlug","require","Note","pageContext","graphData","nodes","Object","keys","allRefersTo","map","key","index","id","links","noteTitle","push","color","fontColor","refNoteTitles","i","refNoteTitle","undefined","source","target","length","allReferredBy","className","to","data","config","directed","highlightDegree","nodeHighlightBehavior","linkHighlightBehavior","collapsible","height","width","node","size","fontSize","highlightFontSize","highlightFontWeight","highlightStrokeColor","highlightStrokeWidth","labelPosition","link","highlightColor","d3","alphaTarget","gravity","linkLength","linkStrength","disableLinkForce","onClickNode","nodeId","slug","navigate"],"sourceRoot":""}